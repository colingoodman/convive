{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/components/TaskBox.vue?vue&type=template&id=0ab5e506&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/components/TaskBox.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n<div\n  class=\"shadow-lg bg-white rounded-lg\"\n  style=\"white-space: nowrap;\nmargin-bottom: 16px;\n-webkit-column-break-inside: avoid;\n      page-break-inside: avoid;\n           break-inside: avoid;\"\n>\n  <!-- taskbox -->\n  <h2 class=\"p-2 bg-gray-200 border-b-2 border-yellow-600\">\n    <button-toggle-box\n      v-model=\"expanded\"\n      expanded-class=\"text-yellow-600\"\n      minimized-class=\"hover:text-yellow-600\"\n    >\n      <check-icon />\n    </button-toggle-box>\n    <span class=\"text-gray-600 uppercase tracking-wide font-medium text-sm\">\n      Tasks\n    </span>\n    <button\n      class=\"text-gray-600 hover:text-yellow-600 align-middle float-right\"\n      @click=\"showTaskSettingsModal\"\n    >\n      <settings-icon />\n    </button>\n    <button\n      class=\"mr-2 text-gray-600 hover:text-yellow-600 align-middle float-right\"\n      @click=\"taskHelpModal = true\"\n    >\n      <help-circle-icon />\n    </button>\n  </h2>\n\n  <div\n    v-show=\"expanded\"\n    class=\"flex p-1\"\n  >\n    <form\n      class=\"flex flex-grow\"\n      @submit.prevent=\"addTask\"\n    >\n      <input\n        v-model=\"newTask\"\n        class=\"flex-grow px-1 outline-none\"\n        type=\"text\"\n        placeholder=\"New Task\"\n      >\n      <button\n        type=\"submit\"\n        class=\"border-2 p-1 border-gray-500 text-gray-500 hover:text-yellow-500 hover:border-yellow-500 rounded-sm\"\n      >\n        <plus-icon />\n      </button>\n    </form>\n    <button\n      type=\"submit\"\n      class=\"p-1 ml-1 border-2 border-yellow-500 bg-yellow-500 text-white hover:bg-yellow-400 rounded-sm flex-shrink-0\"\n    >\n      <package-icon />\n    </button>\n  </div>\n\n  <!-- tag list -->\n  <div\n    v-show=\"expanded\"\n    class=\"flex p-1 overflow-x-auto border-t-2 border-gray-500\"\n  >\n    <button\n      v-for=\"goal in $store.goals\"\n      :key=\"goal._id\"\n      class=\"border-2 px-1 mr-1 border-gray-500 rounded-sm flex-shrink-0\"\n      :class=\"{\n        'bg-teal-500 text-white border-teal-500 hover:bg-teal-400 hover:border-teal-500': tags.includes(goal._id),\n        'bg-white text-gray-500 border-gray-500 hover:text-teal-500 hover:border-teal-500': !tags.includes(goal._id),\n      }\"\n      @click=\"toggleTag(goal._id)\"\n    >\n      {{ goal.name }}\n    </button>\n  </div>\n\n  <div\n    class=\"\"\n    style=\"-webkit-column-break-inside: avoid;\n        page-break-inside: avoid;\n             break-inside: avoid;\n             overflow-y: auto;\n             max-height: 81vh;\"\n  >\n    <ol v-show=\"(tasks.length>0) && (expanded)\">\n      <li\n        v-for=\"(task, i) in filteredTasks.slice().reverse()\"\n        :key=\"task._id\"\n        class=\"border-gray-500 border-t-2 flex items-top bg-gray-100 text-left p-1\"\n        :class=\"{ 'bg-gray-200': !(i % 2), 'bg-gray-400': task.completion }\"\n        @mouseleave=\"changeHighlight(task)\"\n        @mouseenter=\"changeHighlight(task)\"\n      >\n        <button\n          v-show=\"task.completion==false\"\n          class=\"border-gray-500 border-2 px-1 text-gray-500 hover:text-yellow-600 hover:border-yellow-600 rounded-sm\"\n          @click=\"toggleTaskCompletion(task)\"\n        >\n          <check-icon />\n        </button>\n        <button\n          v-show=\"task.completion==true\"\n          class=\"border-2 px-1 border-gray-500 text-gray-500 hover:text-red-500 hover:border-red-500 rounded-sm\"\n          @click=\"toggleTaskCompletion(task)\"\n        >\n          <x-icon />\n        </button>\n\n        <div />\n\n        <button\n          class=\"hover:text-red-500 mx-1\"\n          :class=\"{\n            'text-gray-500': !task.focus,\n            'text-red-500': task.focus\n          }\"\n          @click=\"toggleTaskFocus(task)\"\n        >\n          <target-icon />\n        </button>\n\n        <div class=\"border-1 border-solid border-blue-500 w-auto flex-grow\">\n          <input\n            v-model=\"task.item\"\n            type=\"text\"\n            class=\"truncate flex-grow pl-1 bg-transparent border-gray-500 h-full w-full\"\n            :class=\"{\n              'line-through text-gray-600': task.completion,\n              'text-gray-900': !task.completion\n            }\"\n            @keyup.enter=\"saveChanges(task)\"\n          >\n        </div>\n\n        <div\n          v-show=\"task.valuePoints\"\n          class=\"flex p-1 hover:text-yellow-500 text-gray-500\"\n        >\n          <hexagon-icon />\n          <span>{{ task.valuePoints }}</span>\n        </div>\n\n        <div\n          v-show=\"task.activationDate && task.activation\"\n          class=\"p-1 hover:text-yellow-500 text-gray-500\"\n          :title=\"`Task Activated on ${task.activationDate}`\"\n        >\n          <zap-icon />\n        </div>\n\n        <div\n          v-show=\"task.activationDate && !task.activation\"\n          class=\"p-1 hover:text-yellow-500 text-gray-500\"\n          :title=\"`Task Not Activated`\"\n        >\n          <zap-off-icon />\n        </div>\n\n        <div\n          v-show=\"task.goalID\"\n          class=\"text-gray-500 hover:text-teal-400 p-1\"\n          :title=\"`${task.goalName}`\"\n        >\n          <!-- <span class=\"px-1 uppercase tracking-wide font-medium text-sm\">{{ task.goalName }}</span> -->\n          <trending-up-icon />\n        </div>\n\n        <div\n          v-show=\"task.routine\"\n          class=\"p-1\"\n          :class=\"{\n            'line-through text-gray-500': task.completion,\n            'text-blue-500': !task.completion\n          }\"\n          :title=\"`Generated by Routine on ${task.createdAt}`\"\n        >\n          <copy-icon />\n        </div>\n\n        <due-date-badge :value=\"task.dueDate\" />\n\n        <duration-badge :value=\"Number(task.duration)\" />\n\n        <money-value-badge :value=\"Number(task.valueMoney)\" />\n\n        <div class=\"flex\">\n          <button\n            v-if=\"$store.settings.taskBox.showDeleteButton || task.completion\"\n            class=\"border-2 ml-1 px-1 border-gray-500 flex-shrink-0 text-gray-500 hover:text-red-500 hover:border-red-500 rounded-sm\"\n            @click=\"deleteTask(task)\"\n          >\n            <trash-icon />\n          </button>\n          <button\n            class=\"border-gray-500 ml-1 border-2 flex-shrink-0 text-gray-500 hover:text-blue-500 hover:border-blue-500 p-1 rounded-sm\"\n            @click=\"showItemModal(task)\"\n          >\n            <menu-icon />\n          </button>\n        </div>\n      </li>\n    </ol>\n\n    <div\n      v-show=\"tasks.length==0\"\n      class=\"row alert alert-info text-center bg-gray-200\"\n    >\n      <p class=\"alert alert-info truncate text-gray-500\">\n        The Task Box is empty. Create a new Task above!\n      </p>\n    </div>\n\n    <task-modal style=\"overflow-y: scroll;\" />\n\n    <modal\n      name=\"taskSettingsModal\"\n      height=\"600px\"\n      width=\"400px\"\n    >\n      <task-settings-modal />\n    </modal>\n    <task-box-help v-model=\"taskHelpModal\" />\n  </div>\n</div>\n",null]}