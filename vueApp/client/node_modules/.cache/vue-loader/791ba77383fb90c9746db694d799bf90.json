{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/modals/SubscriptionModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/modals/SubscriptionModal.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios'\r\nimport { XIcon, TrashIcon } from 'vue-feather-icons'\r\nimport FlatPickr from 'vue-flatpickr-component'\r\nimport 'flatpickr/dist/flatpickr.css'\r\n\r\nimport bus from '../bus.js'\r\n\r\nexport default {\r\n  components: { XIcon, TrashIcon, FlatPickr },\r\n  data: () => ({\r\n    register: false,\r\n    item: '',\r\n    goals: [],\r\n  }),\r\n  created() {\r\n    this.fetchGoals()\r\n  },\r\n  methods: {\r\n    setGoal(goal) {\r\n      this.$store.Item.goalID = goal._id\r\n      this.$store.Item.goalName = goal.name\r\n      axios.patch(`/subscriptions/${this.$store.Item._id}`, this.$store.Item)\r\n        .then(() => {\r\n          this.$modal.hide('subscriptionModal')\r\n        })\r\n    },\r\n    hide() {\r\n      this.$modal.hide('subscriptionModal')\r\n    },\r\n    fetchGoals() {\r\n      axios.get('/goals').then(response => {\r\n        this.goals = response.data\r\n      })\r\n    },\r\n    saveChanges() {\r\n      this.$store.Item.lastEdited = new Date()\r\n      axios.patch(`/subscriptions/${this.$store.Item._id}`, this.$store.Item)\r\n    },\r\n    deleteItem() {\r\n      axios.delete(`/subscriptions/${this.$store.Item._id}`)\r\n        .then(() => {\r\n          this.$modal.hide('subscriptionModal')\r\n          bus.$emit('refreshSubscriptions')\r\n        })\r\n    },\r\n    saveClose() {\r\n      this.$store.Item.lastEdited = new Date()\r\n      axios.patch(`/subscriptions/${this.$store.Item._id}`, this.$store.Item)\r\n        .then(() => {\r\n          this.$modal.hide('subscriptionModal')\r\n          bus.$emit('refreshSubscriptions')\r\n        })\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["SubscriptionModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SubscriptionModal.vue","sourceRoot":"src/modals","sourcesContent":["<template>\r\n  <modal\r\n    name=\"subscriptionModal\"\r\n    :height=\"600\"\r\n    :width=\"360\"\r\n  >\r\n    <div\r\n      style=\"overflow-y: scroll; height: 600px;\"\r\n    >\r\n      <form\r\n        class=\"p-4\"\r\n        @submit.prevent=\"hide()\"\r\n      >\r\n        <h1 class=\"text-xl font-bold mb-2 align-middle text-center\">\r\n          Edit Subscription\r\n        </h1>\r\n\r\n        <label\r\n          class=\"flex bg-gray-500 py-1 px-3 text-black rounded-sm mt-3 block\"\r\n          for=\"item\"\r\n        >\r\n          <span class=\"flex-grow align-middle\">Subscription Name</span>\r\n          <button\r\n            class=\"flex-shrink-0 text-black hover:text-red-500 rounded-sm\"\r\n            @click=\"$store.Item.item = null\"\r\n            @blur=\"saveChanges\"\r\n          >\r\n            <x-icon />\r\n          </button>\r\n        </label>\r\n        <input\r\n          id=\"item\"\r\n          v-model=\"$store.Item.item\"\r\n          class=\"block w-full p-1 border border-gray-500 rounded-sm\"\r\n          type=\"text\"\r\n          autofocus\r\n          @blur=\"saveChanges\"\r\n        >\r\n\r\n        <label\r\n          class=\"flex bg-gray-500 py-1 px-3 text-black rounded-sm mt-3 block\"\r\n          for=\"item\"\r\n        >\r\n          <span class=\"flex-grow align-middle\">Subscription Money Value</span>\r\n          <button\r\n            class=\"flex-shrink-0 text-black hover:text-red-500 rounded-sm\"\r\n            @click=\"$store.Item.valueMoney = null\"\r\n            @blur=\"saveChanges\"\r\n          >\r\n            <x-icon />\r\n          </button>\r\n        </label>\r\n        <input\r\n          id=\"item\"\r\n          v-model=\"$store.Item.valueMoney\"\r\n          class=\"block w-full p-1 border border-gray-500 rounded-sm\"\r\n          type=\"number\"\r\n          autofocus\r\n          @blur=\"saveChanges\"\r\n        >\r\n\r\n        <label\r\n          class=\"flex bg-gray-500 py-1 px-3 text-black rounded-sm mt-3 block\"\r\n        >\r\n          <span class=\"flex-grow align-middle\">Due Date</span>\r\n          <button\r\n            class=\"flex-shrink-0 text-black hover:text-red-500 rounded-sm\"\r\n            @click=\"$store.Item.dueDate = null\"\r\n            @blur=\"saveChanges\"\r\n          >\r\n            <x-icon />\r\n          </button>\r\n        </label>\r\n        <flat-pickr\r\n          v-model=\"$store.Item.dueDate\"\r\n          class=\"block w-full p-1 border border-gray-500 rounded-sm\"\r\n          :config=\"{ enableTime: true,\r\n                     inline: true,\r\n                     onChange: saveChanges,\r\n                     static: true,\r\n          }\"\r\n        />\r\n\r\n        <span\r\n          v-show=\"this.$store.Item.createdAt\"\r\n          class=\"bg-gray-500 py-1 px-3 text-black rounded-sm mt-3 block\"\r\n          for=\"createdAt\"\r\n        >\r\n          Date of Creation\r\n        </span>\r\n        <p\r\n          class=\"block w-full p-1 border border-gray-500 rounded-sm\"\r\n        >\r\n          <span\r\n            v-show=\"this.$store.Item.createdAt\"\r\n            class=\"block w-full rounded-sm\"\r\n          >\r\n            {{ this.$store.Item.createdAt | moment(\"dddd, MMMM Do YYYY, h:mm:ss a\") }}\r\n          </span>\r\n          <span\r\n            v-show=\"this.$store.Item.createdAt\"\r\n            class=\"block w-full rounded-sm text-gray-500\"\r\n          >\r\n            {{ this.$store.Item.createdAt | moment(\"from\", \"now\") }}\r\n          </span>\r\n        </p>\r\n\r\n        <div class=\"mt-4 flex items-center justify-between\">\r\n          <button\r\n            class=\"bg-blue-500 hover:bg-blue-600 py-1 px-3 text-white rounded-sm my-1\"\r\n            @click=\"saveClose\"\r\n          >\r\n            Done\r\n          </button>\r\n\r\n          <button\r\n            class=\"flex-shrink-0 text-gray-500 hover:text-red-500\"\r\n            @click=\"deleteItem\"\r\n          >\r\n            <trash-icon />\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </modal>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { XIcon, TrashIcon } from 'vue-feather-icons'\r\nimport FlatPickr from 'vue-flatpickr-component'\r\nimport 'flatpickr/dist/flatpickr.css'\r\n\r\nimport bus from '../bus.js'\r\n\r\nexport default {\r\n  components: { XIcon, TrashIcon, FlatPickr },\r\n  data: () => ({\r\n    register: false,\r\n    item: '',\r\n    goals: [],\r\n  }),\r\n  created() {\r\n    this.fetchGoals()\r\n  },\r\n  methods: {\r\n    setGoal(goal) {\r\n      this.$store.Item.goalID = goal._id\r\n      this.$store.Item.goalName = goal.name\r\n      axios.patch(`/subscriptions/${this.$store.Item._id}`, this.$store.Item)\r\n        .then(() => {\r\n          this.$modal.hide('subscriptionModal')\r\n        })\r\n    },\r\n    hide() {\r\n      this.$modal.hide('subscriptionModal')\r\n    },\r\n    fetchGoals() {\r\n      axios.get('/goals').then(response => {\r\n        this.goals = response.data\r\n      })\r\n    },\r\n    saveChanges() {\r\n      this.$store.Item.lastEdited = new Date()\r\n      axios.patch(`/subscriptions/${this.$store.Item._id}`, this.$store.Item)\r\n    },\r\n    deleteItem() {\r\n      axios.delete(`/subscriptions/${this.$store.Item._id}`)\r\n        .then(() => {\r\n          this.$modal.hide('subscriptionModal')\r\n          bus.$emit('refreshSubscriptions')\r\n        })\r\n    },\r\n    saveClose() {\r\n      this.$store.Item.lastEdited = new Date()\r\n      axios.patch(`/subscriptions/${this.$store.Item._id}`, this.$store.Item)\r\n        .then(() => {\r\n          this.$modal.hide('subscriptionModal')\r\n          bus.$emit('refreshSubscriptions')\r\n        })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}