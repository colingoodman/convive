{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/modals/BaseModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/modals/BaseModal.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  props: {\r\n    value: Boolean,\r\n    persistent: Boolean,\r\n    width: {\r\n      type: Number,\r\n      default: 360,\r\n    },\r\n  },\r\n  watch: {\r\n    value(open) {\r\n      if (open) this.autoFocus()\r\n    },\r\n  },\r\n  methods: {\r\n    handleOutsideClick() {\r\n      if (this.persistent) return\r\n\r\n      this.$emit('input', false)\r\n    },\r\n    autoFocus() {\r\n      const element = this.$el.querySelector('[autofocus]')\r\n\r\n      if (element) requestAnimationFrame(() => element.focus())\r\n      else requestAnimationFrame(() => document.activeElement.blur())\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["BaseModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"BaseModal.vue","sourceRoot":"src/modals","sourcesContent":["<template>\r\n  <transition name=\"fade\">\r\n    <div\r\n      v-show=\"value\"\r\n      class=\"z-50 fixed inset-0 flex p-4\"\r\n      style=\"background-color: rgba(0, 0, 0, .25)\"\r\n      @click.self=\"handleOutsideClick\"\r\n    >\r\n      <div\r\n        role=\"dialog\"\r\n        class=\"m-auto bg-white rounded shadow-md overflow-hidden\"\r\n        :style=\"{ width: `${width}px` }\"\r\n      >\r\n        <slot />\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    value: Boolean,\r\n    persistent: Boolean,\r\n    width: {\r\n      type: Number,\r\n      default: 360,\r\n    },\r\n  },\r\n  watch: {\r\n    value(open) {\r\n      if (open) this.autoFocus()\r\n    },\r\n  },\r\n  methods: {\r\n    handleOutsideClick() {\r\n      if (this.persistent) return\r\n\r\n      this.$emit('input', false)\r\n    },\r\n    autoFocus() {\r\n      const element = this.$el.querySelector('[autofocus]')\r\n\r\n      if (element) requestAnimationFrame(() => element.focus())\r\n      else requestAnimationFrame(() => document.activeElement.blur())\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity .1s;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  @apply opacity-0;\r\n}\r\n</style>\r\n"]}]}