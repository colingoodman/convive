{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/components/widgets/Timer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/components/widgets/Timer.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { MinusIcon, PlusIcon, PlayIcon, PauseIcon, RotateCwIcon } from 'vue-feather-icons'\r\n\r\nexport default {\r\n  components: { MinusIcon, PlusIcon, PlayIcon, PauseIcon, RotateCwIcon },\r\n  data() {\r\n    return {\r\n      timer: null,\r\n      totalTime: 25 * 60,\r\n      resetButton: false,\r\n      time: 0,\r\n    }\r\n  },\r\n  computed: {\r\n    minutes() {\r\n      const minutes = Math.floor(this.totalTime / 60)\r\n      return this.padTime(minutes)\r\n    },\r\n    seconds() {\r\n      const seconds = this.totalTime - (this.minutes * 60)\r\n      return this.padTime(seconds)\r\n    },\r\n  },\r\n  destroyed() {\r\n    clearInterval(this.timer)\r\n  },\r\n  methods: {\r\n    startTimer() {\r\n      this.timer = setInterval(() => this.countdown(), 1000)\r\n      this.resetButton = true\r\n    },\r\n    stopTimer() {\r\n      clearInterval(this.timer)\r\n      this.timer = null\r\n      this.resetButton = true\r\n    },\r\n    resetTimer() {\r\n      this.totalTime = (25 * 60)\r\n      clearInterval(this.timer)\r\n      this.timer = null\r\n      this.resetButton = false\r\n    },\r\n    padTime: function(time) {\r\n      return (time < 10 ? '0' : '') + time\r\n    },\r\n    countdown() {\r\n      this.totalTime--\r\n    },\r\n    addMinute() {\r\n      this.totalTime += 60\r\n    },\r\n    subtractMinute() {\r\n      this.totalTime -= 60\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["Timer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Timer.vue","sourceRoot":"src/components/widgets","sourcesContent":["<template>\r\n  <div class=\"flex\">\r\n    <button\r\n      class=\"border-green-500 text-gray-500 hover:text-green-500\"\r\n      @click=\"resetTimer()\"\r\n    >\r\n      <rotate-cw-icon />\r\n    </button>\r\n\r\n    <button\r\n      v-if=\"!timer\"\r\n      class=\"border-green-500 text-gray-500 hover:text-green-500\"\r\n      @click=\"startTimer()\"\r\n    >\r\n      <play-icon />\r\n    </button>\r\n\r\n    <button\r\n      v-if=\"timer\"\r\n      class=\"border-green-500 text-gray-500 hover:text-yellow-600\"\r\n      @click=\"stopTimer()\"\r\n    >\r\n      <pause-icon />\r\n    </button>\r\n\r\n    <div\r\n      id=\"timer\"\r\n      style=\"border-color: lightgray;\"\r\n    >\r\n      <span id=\"minutes\">{{ minutes }}</span>\r\n      <span id=\"middle\">:</span>\r\n      <span id=\"seconds\">{{ seconds }}</span>\r\n    </div>\r\n\r\n    <button\r\n      class=\"border-green-500 text-gray-500 hover:text-green-500\"\r\n      @click=\"addMinute()\"\r\n    >\r\n      <plus-icon />\r\n    </button>\r\n\r\n    <button\r\n      class=\"border-green-500 text-gray-500 hover:text-green-500\"\r\n      @click=\"subtractMinute()\"\r\n    >\r\n      <minus-icon />\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { MinusIcon, PlusIcon, PlayIcon, PauseIcon, RotateCwIcon } from 'vue-feather-icons'\r\n\r\nexport default {\r\n  components: { MinusIcon, PlusIcon, PlayIcon, PauseIcon, RotateCwIcon },\r\n  data() {\r\n    return {\r\n      timer: null,\r\n      totalTime: 25 * 60,\r\n      resetButton: false,\r\n      time: 0,\r\n    }\r\n  },\r\n  computed: {\r\n    minutes() {\r\n      const minutes = Math.floor(this.totalTime / 60)\r\n      return this.padTime(minutes)\r\n    },\r\n    seconds() {\r\n      const seconds = this.totalTime - (this.minutes * 60)\r\n      return this.padTime(seconds)\r\n    },\r\n  },\r\n  destroyed() {\r\n    clearInterval(this.timer)\r\n  },\r\n  methods: {\r\n    startTimer() {\r\n      this.timer = setInterval(() => this.countdown(), 1000)\r\n      this.resetButton = true\r\n    },\r\n    stopTimer() {\r\n      clearInterval(this.timer)\r\n      this.timer = null\r\n      this.resetButton = true\r\n    },\r\n    resetTimer() {\r\n      this.totalTime = (25 * 60)\r\n      clearInterval(this.timer)\r\n      this.timer = null\r\n      this.resetButton = false\r\n    },\r\n    padTime: function(time) {\r\n      return (time < 10 ? '0' : '') + time\r\n    },\r\n    countdown() {\r\n      this.totalTime--\r\n    },\r\n    addMinute() {\r\n      this.totalTime += 60\r\n    },\r\n    subtractMinute() {\r\n      this.totalTime -= 60\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}