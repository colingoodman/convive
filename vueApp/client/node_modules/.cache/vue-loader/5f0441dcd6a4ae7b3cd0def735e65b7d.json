{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/components/GoalBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/components/GoalBox.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport axios from 'axios'\r\nimport { PlusIcon, TrendingUpIcon, PackageIcon, MenuIcon } from 'vue-feather-icons'\r\nimport 'vue-swatches/dist/vue-swatches.min.css'\r\n\r\nimport bus from './../bus.js'\r\n\r\nimport ButtonToggleBox from './widgets/ButtonToggleBox.vue'\r\nimport GoalModal from '../modals/GoalModal.vue'\r\n\r\nexport default {\r\n  components: {\r\n    PlusIcon,\r\n    TrendingUpIcon,\r\n    PackageIcon,\r\n    MenuIcon,\r\n    ButtonToggleBox,\r\n    GoalModal,\r\n  },\r\n  data() {\r\n    return {\r\n      goalListKey: 0,\r\n      color: '',\r\n      newGoal: '',\r\n      expanded: true,\r\n      box: 'Goal',\r\n    }\r\n  },\r\n  created() {\r\n    this.listenToEvents()\r\n  },\r\n  methods: {\r\n    addGoal() {\r\n      let param = {\r\n        name: this.newGoal,\r\n      }\r\n      axios\r\n        .post('/goals', param)\r\n        .then(() => {\r\n          this.clearGoal()\r\n          this.fetchGoals()\r\n        })\r\n    },\r\n    clearGoal() {\r\n      this.newGoal = ''\r\n    },\r\n    refreshGoals() {\r\n      bus.$emit('refreshGoals')\r\n    },\r\n    changeGoalItem(goal) {\r\n      let id = goal._id\r\n      let it = goal.item\r\n      axios\r\n        .put(`/changeGoalItem/${id}/${it}`)\r\n        .then(() => {\r\n          this.fetchGoals()\r\n        })\r\n    },\r\n    deleteGoal(id) {\r\n      axios\r\n        .get(`/deleteGoal/${id}`)\r\n        .then(() => {\r\n          this.fetchGoals()\r\n        })\r\n    },\r\n    showWriteGoal(goal) {\r\n      this.$store.Item = goal\r\n\r\n      this.$modal.show('goalModal',)\r\n    },\r\n    listenToEvents() {\r\n      bus.$on('refreshGoals', () => {\r\n        this.fetchGoals() // update goal\r\n      })\r\n    },\r\n    showGoalModal(goal) {\r\n      this.$store.Item = goal\r\n\r\n      this.$modal.show('goalModal',)\r\n    },\r\n    saveChanges(goal) {\r\n      this.$store.Item = goal\r\n      this.$store.Item.lastEdited = new Date()\r\n      axios.patch(`/goals/${this.$store.Item._id}`, this.$store.Item)\r\n    },\r\n  },\r\n}\r\n\r\n",{"version":3,"sources":["GoalBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GoalBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div\r\n    class=\"shadow-lg bg-white rounded-lg\"\r\n    style=\"white-space: nowrap;\r\n  margin-bottom: 32px;\r\n  -webkit-column-break-inside: avoid;\r\n        page-break-inside: avoid;\r\n             break-inside: avoid;\"\r\n  >\r\n    <h2 class=\"p-2 bg-gray-200 border-b-2 border-teal-500\">\r\n      <button-toggle-box\r\n        v-model=\"expanded\"\r\n        expanded-class=\"text-teal-500\"\r\n        minimized-class=\"hover:text-teal-500\"\r\n      >\r\n        <trending-up-icon />\r\n      </button-toggle-box>\r\n      <span class=\"text-gray-600 uppercase tracking-wide font-medium text-sm\">\r\n        Goals\r\n      </span>\r\n    </h2>\r\n\r\n    <div\r\n      v-show=\"expanded\"\r\n      class=\"flex p-1\"\r\n    >\r\n      <form\r\n        class=\"flex flex-grow\"\r\n        @submit.prevent=\"addGoal\"\r\n      >\r\n        <input\r\n          v-model=\"newGoal\"\r\n          class=\"flex-grow px-1 outline-none\"\r\n          type=\"text\"\r\n          placeholder=\"New Goal\"\r\n        >\r\n        <button\r\n          type=\"submit\"\r\n          class=\"border-2 p-1 border-gray-500 text-gray-500 hover:text-yellow-500 hover:border-yellow-500 rounded-sm\"\r\n        >\r\n          <plus-icon />\r\n        </button>\r\n      </form>\r\n      <button\r\n        type=\"submit\"\r\n        class=\"p-1 ml-1 border-2 border-teal-500 bg-teal-500 text-white hover:bg-teal-400 rounded-sm flex-shrink-0\"\r\n      >\r\n        <package-icon />\r\n      </button>\r\n    </div>\r\n\r\n    <div\r\n      class=\"\"\r\n      style=\"-webkit-column-break-inside: avoid;\r\n          page-break-inside: avoid;\r\n               break-inside: avoid;\"\r\n    >\r\n      <ol v-show=\"($store.goals.length>0) && (expanded)\">\r\n        <li\r\n          v-for=\"(goal, i) in $store.goals.slice().reverse()\"\r\n          :key=\"goal._id\"\r\n          class=\"flex py-2 items-top bg-gray-100 text-left\"\r\n          :class=\"{ 'bg-gray-200': !(i % 2), 'bg-blue-200': ($store.highlightGoalID === goal._id) }\"\r\n        >\r\n          <div class=\"border-1 border-solid border-blue-500 w-auto flex-grow\">\r\n            <span\r\n              class=\"truncate flex-grow pl-3 bg-transparent border-gray-500 h-full w-full\"\r\n            >\r\n              {{ goal.name }}\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"flex px-1\">\r\n            <button\r\n              class=\"flex-shrink-0 text-gray-500 hover:text-blue-500 mx-1\"\r\n              @click=\"showGoalModal(goal)\"\r\n            >\r\n              <menu-icon />\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ol>\r\n\r\n      <div\r\n        v-show=\"$store.goals.length==0\"\r\n        class=\"row alert alert-info text-center bg-gray-200\"\r\n      >\r\n        <p class=\"alert alert-info truncate text-gray-500\">\r\n          The Goal Box is empty. Create a new Goal above!\r\n        </p>\r\n      </div>\r\n\r\n      <modal\r\n        name=\"goalModal\"\r\n        height=\"auto\"\r\n        width=\"400px\"\r\n      >\r\n        <goal-modal />\r\n      </modal>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from 'axios'\r\nimport { PlusIcon, TrendingUpIcon, PackageIcon, MenuIcon } from 'vue-feather-icons'\r\nimport 'vue-swatches/dist/vue-swatches.min.css'\r\n\r\nimport bus from './../bus.js'\r\n\r\nimport ButtonToggleBox from './widgets/ButtonToggleBox.vue'\r\nimport GoalModal from '../modals/GoalModal.vue'\r\n\r\nexport default {\r\n  components: {\r\n    PlusIcon,\r\n    TrendingUpIcon,\r\n    PackageIcon,\r\n    MenuIcon,\r\n    ButtonToggleBox,\r\n    GoalModal,\r\n  },\r\n  data() {\r\n    return {\r\n      goalListKey: 0,\r\n      color: '',\r\n      newGoal: '',\r\n      expanded: true,\r\n      box: 'Goal',\r\n    }\r\n  },\r\n  created() {\r\n    this.listenToEvents()\r\n  },\r\n  methods: {\r\n    addGoal() {\r\n      let param = {\r\n        name: this.newGoal,\r\n      }\r\n      axios\r\n        .post('/goals', param)\r\n        .then(() => {\r\n          this.clearGoal()\r\n          this.fetchGoals()\r\n        })\r\n    },\r\n    clearGoal() {\r\n      this.newGoal = ''\r\n    },\r\n    refreshGoals() {\r\n      bus.$emit('refreshGoals')\r\n    },\r\n    changeGoalItem(goal) {\r\n      let id = goal._id\r\n      let it = goal.item\r\n      axios\r\n        .put(`/changeGoalItem/${id}/${it}`)\r\n        .then(() => {\r\n          this.fetchGoals()\r\n        })\r\n    },\r\n    deleteGoal(id) {\r\n      axios\r\n        .get(`/deleteGoal/${id}`)\r\n        .then(() => {\r\n          this.fetchGoals()\r\n        })\r\n    },\r\n    showWriteGoal(goal) {\r\n      this.$store.Item = goal\r\n\r\n      this.$modal.show('goalModal',)\r\n    },\r\n    listenToEvents() {\r\n      bus.$on('refreshGoals', () => {\r\n        this.fetchGoals() // update goal\r\n      })\r\n    },\r\n    showGoalModal(goal) {\r\n      this.$store.Item = goal\r\n\r\n      this.$modal.show('goalModal',)\r\n    },\r\n    saveChanges(goal) {\r\n      this.$store.Item = goal\r\n      this.$store.Item.lastEdited = new Date()\r\n      axios.patch(`/goals/${this.$store.Item._id}`, this.$store.Item)\r\n    },\r\n  },\r\n}\r\n\r\n</script>\r\n"]}]}