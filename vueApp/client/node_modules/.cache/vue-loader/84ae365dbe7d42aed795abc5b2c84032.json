{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/components/auth/RegisterForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/components/auth/RegisterForm.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\n\nimport { handleSuccessfulLogin } from '../../auth'\n\nexport default {\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    }\n  },\n  methods: {\n    submit() {\n      if (this.password === this.confirmPassword) {\n        axios.post('/register', {\n          email: this.email,\n          password: this.password,\n        })\n          .then(response => {\n            handleSuccessfulLogin(response.data.token)\n            this.$emit('register')\n          })\n      } else {\n        this.password = ''\n        this.confirmPassword = ''\n\n        return alert('Passwords do not match')\n      }\n    },\n    hide() {\n      this.$modal.hide('auth')\n    },\n  },\n\n}\n\n",{"version":3,"sources":["RegisterForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"RegisterForm.vue","sourceRoot":"src/components/auth","sourcesContent":["<template>\n  <form @submit.prevent=\"submit\">\n    <h1 class=\"text-xl font-bold mb-2\">\n      Register\n    </h1>\n\n    <label\n      class=\"block\"\n      for=\"email\"\n    >\n      Email\n    </label>\n    <input\n      id=\"email\"\n      v-model=\"email\"\n      class=\"block w-full p-1 border border-gray-500 rounded-sm\"\n      type=\"email\"\n      required\n      autofocus\n    >\n\n    <label\n      class=\"block mt-3\"\n      for=\"password\"\n    >\n      Password\n    </label>\n    <input\n      id=\"password\"\n      v-model=\"password\"\n      class=\"block w-full p-1 border border-gray-500 rounded-sm\"\n      type=\"password\"\n      required\n    >\n\n    <label\n      class=\"block mt-3\"\n      for=\"confirm-password\"\n    >\n      Confirm Password\n    </label>\n    <input\n      id=\"confirm-password\"\n      v-model=\"confirmPassword\"\n      class=\"block w-full p-1 border border-gray-500 rounded-sm\"\n      type=\"password\"\n      required\n    >\n\n    <div class=\"mt-4 flex items-center justify-between\">\n      <button\n        class=\"bg-blue-500 hover:bg-blue-400 py-1 px-3 text-white rounded-sm\"\n        type=\"submit\"\n      >\n        Register\n      </button>\n      <button\n        class=\"underline text-gray-500\"\n        @click=\"$emit('login')\"\n      >\n        I already have an account\n      </button>\n    </div>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios'\n\nimport { handleSuccessfulLogin } from '../../auth'\n\nexport default {\n  data() {\n    return {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    }\n  },\n  methods: {\n    submit() {\n      if (this.password === this.confirmPassword) {\n        axios.post('/register', {\n          email: this.email,\n          password: this.password,\n        })\n          .then(response => {\n            handleSuccessfulLogin(response.data.token)\n            this.$emit('register')\n          })\n      } else {\n        this.password = ''\n        this.confirmPassword = ''\n\n        return alert('Passwords do not match')\n      }\n    },\n    hide() {\n      this.$modal.hide('auth')\n    },\n  },\n\n}\n\n</script>\n"]}]}