{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/components/widgets/MoneyValueBadge.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/components/widgets/MoneyValueBadge.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  props: {\r\n    value: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n  },\r\n  computed: {\r\n    string() {\r\n      if (this.value >= 0) { return `$${this.value}` }\r\n      let absValue = Math.abs(this.value);\r\n      return `-$${absValue}`\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["MoneyValueBadge.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MoneyValueBadge.vue","sourceRoot":"src/components/widgets","sourcesContent":["<template>\r\n  <span\r\n    v-if=\"value\"\r\n    class=\"p-1 ml-1 border-2 text-white rounded-sm flex-shrink-0\"\r\n    :title=\"string\"\r\n    :class=\"{ 'border-red-400 bg-red-400': (value < 0),\r\n              'border-gray-500 bg-gray-500': (value == 0),\r\n              'border-green-400 bg-green-400': (value > 0) }\"\r\n  >\r\n    {{ string }}\r\n  </span>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    value: {\r\n      type: Number,\r\n      default: null,\r\n    },\r\n  },\r\n  computed: {\r\n    string() {\r\n      if (this.value >= 0) { return `$${this.value}` }\r\n      let absValue = Math.abs(this.value);\r\n      return `-$${absValue}`\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}