{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/components/RewardBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/components/RewardBox.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport axios from 'axios'\r\nimport {\r\n  CheckIcon, SettingsIcon, PlusIcon, PackageIcon, XIcon, TargetIcon, ZapIcon,\r\n  ZapOffIcon, TrendingUpIcon, AwardIcon, MenuIcon, TrashIcon, HexagonIcon,\r\n} from 'vue-feather-icons'\r\n\r\nimport ButtonToggleBox from './widgets/ButtonToggleBox.vue'\r\nimport DurationBadge from './widgets/DurationBadge.vue'\r\nimport MoneyValueBadge from './widgets/MoneyValueBadge.vue'\r\nimport DueDateBadge from './widgets/DueDateBadge.vue'\r\n\r\nimport RewardModal from '../modals/RewardModal.vue'\r\n\r\nexport default {\r\n  components: {\r\n    RewardModal,\r\n    SettingsIcon,\r\n    PlusIcon,\r\n    PackageIcon,\r\n    HexagonIcon,\r\n    TargetIcon,\r\n    ZapIcon,\r\n    ZapOffIcon,\r\n    TrendingUpIcon,\r\n    AwardIcon,\r\n    MenuIcon,\r\n    TrashIcon,\r\n    ButtonToggleBox,\r\n    DurationBadge,\r\n    MoneyValueBadge,\r\n    DueDateBadge,\r\n  },\r\n  data() {\r\n    return {\r\n      colors: [],\r\n      rewards: [],\r\n      goals: [],\r\n      tags: [],\r\n      newReward: '',\r\n      expanded: true,\r\n      box: 'Reward',\r\n      rewardModalOpen: false,\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.fetchRewards()\r\n  },\r\n\r\n  methods: {\r\n    addReward() {\r\n      let param = {\r\n        item: this.newReward,\r\n      }\r\n      axios\r\n        .post('/rewards', param)\r\n        .then(() => {\r\n          this.clearReward()\r\n          this.fetchRewards()\r\n        })\r\n    },\r\n    clearReward() {\r\n      this.newReward = ''\r\n    },\r\n    fetchRewards() {\r\n      axios.get('/rewards').then(response => {\r\n        this.rewards = response.data\r\n      })\r\n    },\r\n    purchaseReward(reward) {\r\n      this.$store.settings.points -= reward.cost\r\n      reward.uses += 1\r\n      this.saveChanges(reward)\r\n    },\r\n    async saveChanges(reward) {\r\n      await axios.patch(`/rewards/${reward._id}`, reward)\r\n      reward.lastEdited = new Date()\r\n    },\r\n    async deleteReward(reward) {\r\n      await axios.delete(`/rewards/${reward._id}`)\r\n      this.rewards = this.rewards.filter(t => t !== reward)\r\n    },\r\n    showRewardModal(reward) {\r\n      this.$store.Item = reward\r\n\r\n      this.rewardModalOpen = true;\r\n    },\r\n  },\r\n}\r\n\r\n",{"version":3,"sources":["RewardBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"RewardBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div\r\n    class=\"shadow-lg bg-white rounded-lg\"\r\n    style=\"white-space: nowrap;\r\n  margin-bottom: 16px;\r\n  -webkit-column-break-inside: avoid;\r\n        page-break-inside: avoid;\r\n             break-inside: avoid;\"\r\n  >\r\n    <!-- rewardbox -->\r\n    <h2 class=\"p-2 bg-gray-200 border-b-2 border-pink-600 flex\">\r\n      <button-toggle-box\r\n        v-model=\"expanded\"\r\n        expanded-class=\"text-pink-600\"\r\n        minimized-class=\"hover:text-pink-600\"\r\n      >\r\n        <award-icon />\r\n      </button-toggle-box>\r\n      <span class=\"text-gray-600 uppercase tracking-wide font-medium text-sm\">\r\n        Rewards\r\n      </span>\r\n      <div class=\"flex-grow\" />\r\n      <div class=\"flex px-1 text-gray-600\">\r\n        {{ $store.settings.points }}\r\n        <hexagon-icon />\r\n      </div>\r\n      <button\r\n        class=\"text-gray-600 hover:text-pink-600 align-middle float-right\"\r\n      >\r\n        <settings-icon />\r\n      </button>\r\n    </h2>\r\n\r\n    <div\r\n      v-show=\"expanded\"\r\n      class=\"flex p-1\"\r\n    >\r\n      <form\r\n        class=\"flex flex-grow\"\r\n        @submit.prevent=\"addReward\"\r\n      >\r\n        <input\r\n          v-model=\"newReward\"\r\n          class=\"flex-grow px-1 outline-none\"\r\n          type=\"text\"\r\n          placeholder=\"New Reward\"\r\n        >\r\n        <button\r\n          type=\"submit\"\r\n          class=\"border-2 p-1 border-gray-500 text-gray-500 hover:text-pink-500 hover:border-pink-500 rounded-sm\"\r\n        >\r\n          <plus-icon />\r\n        </button>\r\n      </form>\r\n      <button\r\n        class=\"p-1 ml-1 border-2 border-pink-500 bg-pink-500 text-white hover:bg-pink-400 rounded-sm flex-shrink-0\"\r\n      >\r\n        <package-icon />\r\n      </button>\r\n    </div>\r\n    <div\r\n      class=\"\"\r\n      style=\"-webkit-column-break-inside: avoid;\r\n          page-break-inside: avoid;\r\n               break-inside: avoid;\r\n               overflow-y: auto;\r\n               max-height: 81vh;\"\r\n    >\r\n      <ol v-show=\"(rewards.length>0) && (expanded)\">\r\n        <li\r\n          v-for=\"(reward, i) in rewards.slice().reverse()\"\r\n          :key=\"reward._id\"\r\n          class=\"border-gray-500 border-t-2 flex items-top bg-gray-100 text-left p-1\"\r\n          :class=\"{ 'bg-gray-200': !(i % 2) }\"\r\n        >\r\n          <button\r\n            class=\"border-gray-500 border-2 p-1 text-gray-500 hover:text-pink-600 hover:border-pink-600 rounded-sm flex\"\r\n            @click=\"purchaseReward(reward)\"\r\n          >\r\n            <div>\r\n              <hexagon-icon />\r\n            </div>\r\n            <span>{{ reward.cost }}</span>\r\n          </button>\r\n          <div class=\"border-1 border-solid border-blue-500 w-auto flex-grow\">\r\n            <input\r\n              v-model=\"reward.item\"\r\n              type=\"text\"\r\n              class=\"truncate flex-grow pl-1 bg-transparent border-gray-500 h-full w-full\"\r\n              @keyup.enter=\"saveChanges(reward)\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"flex text-gray-600\">\r\n            <span class=\"p-1 text-lg\">{{ reward.uses }}</span>\r\n            <button\r\n              class=\"border-2 ml-1 px-1 border-gray-500 flex-shrink-0 text-gray-500 hover:text-red-500 hover:border-red-500 rounded-sm\"\r\n              @click=\"deleteReward(reward)\"\r\n            >\r\n              <trash-icon />\r\n            </button>\r\n            <button\r\n              class=\"border-gray-500 ml-1 border-2 flex-shrink-0 text-gray-500 hover:text-blue-500 hover:border-blue-500 p-1 rounded-sm\"\r\n              @click=\"showRewardModal(reward)\"\r\n            >\r\n              <menu-icon />\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ol>\r\n\r\n      <div\r\n        v-show=\"rewards.length==0\"\r\n        class=\"row alert alert-info text-center bg-gray-200\"\r\n      >\r\n        <p class=\"alert alert-info truncate text-gray-500\">\r\n          The Reward Box is empty. Create a new Reward above!\r\n        </p>\r\n      </div>\r\n\r\n      <reward-modal v-model=\"rewardModalOpen\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport {\r\n  CheckIcon, SettingsIcon, PlusIcon, PackageIcon, XIcon, TargetIcon, ZapIcon,\r\n  ZapOffIcon, TrendingUpIcon, AwardIcon, MenuIcon, TrashIcon, HexagonIcon,\r\n} from 'vue-feather-icons'\r\n\r\nimport ButtonToggleBox from './widgets/ButtonToggleBox.vue'\r\nimport DurationBadge from './widgets/DurationBadge.vue'\r\nimport MoneyValueBadge from './widgets/MoneyValueBadge.vue'\r\nimport DueDateBadge from './widgets/DueDateBadge.vue'\r\n\r\nimport RewardModal from '../modals/RewardModal.vue'\r\n\r\nexport default {\r\n  components: {\r\n    RewardModal,\r\n    SettingsIcon,\r\n    PlusIcon,\r\n    PackageIcon,\r\n    HexagonIcon,\r\n    TargetIcon,\r\n    ZapIcon,\r\n    ZapOffIcon,\r\n    TrendingUpIcon,\r\n    AwardIcon,\r\n    MenuIcon,\r\n    TrashIcon,\r\n    ButtonToggleBox,\r\n    DurationBadge,\r\n    MoneyValueBadge,\r\n    DueDateBadge,\r\n  },\r\n  data() {\r\n    return {\r\n      colors: [],\r\n      rewards: [],\r\n      goals: [],\r\n      tags: [],\r\n      newReward: '',\r\n      expanded: true,\r\n      box: 'Reward',\r\n      rewardModalOpen: false,\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.fetchRewards()\r\n  },\r\n\r\n  methods: {\r\n    addReward() {\r\n      let param = {\r\n        item: this.newReward,\r\n      }\r\n      axios\r\n        .post('/rewards', param)\r\n        .then(() => {\r\n          this.clearReward()\r\n          this.fetchRewards()\r\n        })\r\n    },\r\n    clearReward() {\r\n      this.newReward = ''\r\n    },\r\n    fetchRewards() {\r\n      axios.get('/rewards').then(response => {\r\n        this.rewards = response.data\r\n      })\r\n    },\r\n    purchaseReward(reward) {\r\n      this.$store.settings.points -= reward.cost\r\n      reward.uses += 1\r\n      this.saveChanges(reward)\r\n    },\r\n    async saveChanges(reward) {\r\n      await axios.patch(`/rewards/${reward._id}`, reward)\r\n      reward.lastEdited = new Date()\r\n    },\r\n    async deleteReward(reward) {\r\n      await axios.delete(`/rewards/${reward._id}`)\r\n      this.rewards = this.rewards.filter(t => t !== reward)\r\n    },\r\n    showRewardModal(reward) {\r\n      this.$store.Item = reward\r\n\r\n      this.rewardModalOpen = true;\r\n    },\r\n  },\r\n}\r\n\r\n</script>\r\n"]}]}