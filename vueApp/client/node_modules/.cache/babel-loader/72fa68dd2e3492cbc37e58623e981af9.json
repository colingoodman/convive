{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js!/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/eslint-loader/index.js??ref--13-0!/home/bluesteel/Desktop/hack19/vueApp/client/src/auth.js","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/auth.js","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport decodeJWT from 'jwt-decode';\nimport store from \"./store\";\nimport { router } from \"./main\";\nexport function handleSuccessfulLogin(token) {\n  localStorage.setItem('jwt', token);\n  handleAuthentication(token); // const user = decodeJWT(token)\n  // this.$router.push(user.isAdmin ? 'admin' : 'dashboard')\n}\nexport function checkAuthentication() {\n  var token = localStorage.getItem('jwt');\n  if (token) handleAuthentication(token);\n}\nexport function handleAuthentication(_x) {\n  return _handleAuthentication.apply(this, arguments);\n}\n\nfunction _handleAuthentication() {\n  _handleAuthentication = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(token) {\n    var payload;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            axios.defaults.headers.common['Authorization'] = token;\n            _context.next = 3;\n            return axios.get('/settings');\n\n          case 3:\n            store.settings = _context.sent.data;\n            payload = decodeJWT(token);\n            store.user = payload.user;\n            axios.patch(\"/users/\".concat(store.user.id), {\n              previousLogin: new Date()\n            });\n            router.replace('/app');\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _handleAuthentication.apply(this, arguments);\n}",{"version":3,"sources":["/home/bluesteel/Desktop/hack19/vueApp/client/src/auth.js"],"names":["axios","decodeJWT","store","router","handleSuccessfulLogin","token","localStorage","setItem","handleAuthentication","checkAuthentication","getItem","defaults","headers","common","get","settings","data","payload","user","patch","id","previousLogin","Date","replace"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,KAAP;AACA,SAASC,MAAT;AAEA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAC3CC,EAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,KAA5B;AACAG,EAAAA,oBAAoB,CAACH,KAAD,CAApB,CAF2C,CAG3C;AACA;AACD;AAED,OAAO,SAASI,mBAAT,GAA+B;AACpC,MAAMJ,KAAK,GAAGC,YAAY,CAACI,OAAb,CAAqB,KAArB,CAAd;AACA,MAAIL,KAAJ,EAAWG,oBAAoB,CAACH,KAAD,CAApB;AACZ;AAED,gBAAsBG,oBAAtB;AAAA;AAAA;;;;;0BAAO,iBAAoCH,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACLL,YAAAA,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDR,KAAjD;AADK;AAAA,mBAGmBL,KAAK,CAACc,GAAN,CAAU,WAAV,CAHnB;;AAAA;AAGLZ,YAAAA,KAAK,CAACa,QAHD,iBAG2CC,IAH3C;AAKCC,YAAAA,OALD,GAKWhB,SAAS,CAACI,KAAD,CALpB;AAMLH,YAAAA,KAAK,CAACgB,IAAN,GAAaD,OAAO,CAACC,IAArB;AACAlB,YAAAA,KAAK,CAACmB,KAAN,kBAAsBjB,KAAK,CAACgB,IAAN,CAAWE,EAAjC,GAAuC;AAAEC,cAAAA,aAAa,EAAE,IAAIC,IAAJ;AAAjB,aAAvC;AAEAnB,YAAAA,MAAM,CAACoB,OAAP,CAAe,MAAf;;AATK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from 'axios'\r\nimport decodeJWT from 'jwt-decode'\r\n\r\nimport store from './store'\r\nimport { router } from './main'\r\n\r\nexport function handleSuccessfulLogin(token) {\r\n  localStorage.setItem('jwt', token)\r\n  handleAuthentication(token)\r\n  // const user = decodeJWT(token)\r\n  // this.$router.push(user.isAdmin ? 'admin' : 'dashboard')\r\n}\r\n\r\nexport function checkAuthentication() {\r\n  const token = localStorage.getItem('jwt')\r\n  if (token) handleAuthentication(token)\r\n}\r\n\r\nexport async function handleAuthentication(token) {\r\n  axios.defaults.headers.common['Authorization'] = token\r\n\r\n  store.settings = (await axios.get('/settings')).data\r\n\r\n  const payload = decodeJWT(token)\r\n  store.user = payload.user\r\n  axios.patch(`/users/${store.user.id}`, { previousLogin: new Date() })\r\n\r\n  router.replace('/app')\r\n}\r\n"]}]}