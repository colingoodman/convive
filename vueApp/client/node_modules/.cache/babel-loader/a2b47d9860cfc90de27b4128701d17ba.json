{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js!/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/components/ListBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/components/ListBox.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { ListIcon, SettingsIcon, PlusIcon, PackageIcon, MenuIcon } from 'vue-feather-icons';\nimport bus from \"./../bus.js\";\nimport ListModal from \"../modals/ListModal.vue\";\nimport WriteListModal from \"../modals/WriteListModal.vue\";\nimport ButtonToggleBox from \"./widgets/ButtonToggleBox.vue\";\nexport default {\n  components: {\n    ListIcon: ListIcon,\n    SettingsIcon: SettingsIcon,\n    PlusIcon: PlusIcon,\n    PackageIcon: PackageIcon,\n    MenuIcon: MenuIcon,\n    WriteListModal: WriteListModal,\n    ButtonToggleBox: ButtonToggleBox,\n    ListModal: ListModal\n  },\n  data: function data() {\n    return {\n      listListKey: 0,\n      colors: [],\n      lists: [],\n      newList: '',\n      expanded: true,\n      box: 'List'\n    };\n  },\n  created: function created() {\n    this.fetchLists();\n    this.listenToEvents();\n  },\n  methods: {\n    changeHighlight: function changeHighlight(list) {\n      if (this.$store.highlightRoutineID === list.routineID) {\n        this.$store.highlightRoutineID = null;\n      } else {\n        this.$store.highlightRoutineID = list.routineID;\n      }\n\n      if (this.$store.highlightGoalID === list.goalID) {\n        this.$store.highlightGoalID = null;\n      } else {\n        this.$store.highlightGoalID = list.goalID;\n      }\n    },\n    addList: function addList() {\n      var _this = this;\n\n      var param = {\n        item: this.newList\n      };\n      axios.post('/lists', param).then(function () {\n        _this.clearList();\n\n        _this.fetchLists();\n      });\n    },\n    clearList: function clearList() {\n      this.newList = '';\n    },\n    fetchLists: function fetchLists() {\n      var _this2 = this;\n\n      axios.get('/lists').then(function (response) {\n        _this2.lists = response.data;\n      });\n    },\n    toggleListCompletion: function toggleListCompletion(list) {\n      var _this3 = this;\n\n      var id = list._id;\n\n      if (list.completion) {\n        axios.patch(\"/lists/\".concat(id), {\n          completion: false\n        }).then(function () {\n          list.completion = false;\n        });\n      } else {\n        axios.patch(\"/lists/\".concat(id), {\n          completion: true,\n          focus: false\n        }).then(function () {\n          list.completion = true;\n          list.focus = false;\n\n          _this3.fetchLists();\n        });\n      }\n    },\n    toggleListFocus: function toggleListFocus(list) {\n      var _this4 = this;\n\n      var id = list._id;\n\n      if (list.focus) {\n        axios.patch(\"/lists/\".concat(id), {\n          focus: false\n        }).then(function () {\n          list.focus = false;\n\n          _this4.fetchLists();\n        });\n      } else {\n        axios.patch(\"/lists/\".concat(id), {\n          focus: true\n        }).then(function () {\n          list.focus = true;\n\n          _this4.fetchLists();\n        });\n      }\n    },\n    saveChanges: function saveChanges(list) {\n      var _this5 = this;\n\n      list.lastEdited = new Date();\n      axios.patch(\"/lists/\".concat(list._id), list).then(function () {\n        _this5.fetchLists();\n      });\n    },\n    deleteList: function deleteList(list) {\n      axios.delete(\"/lists/\".concat(list._id)).then(function () {\n        bus.$emit('refreshLists');\n      });\n    },\n    anyChangeTimer: function anyChangeTimer(item) {\n      var _this6 = this;\n\n      if (item.timer) {\n        axios.put(\"anyChangeTimer/\".concat(item._id, \"/\").concat(item.type, \"/false\")).then(function () {\n          _this6.fetchLists();\n        });\n      } else {\n        axios.put(\"anyChangeTimer/\".concat(item._id, \"/\").concat(item.type, \"/true\")).then(function () {\n          _this6.fetchLists();\n        });\n      }\n    },\n    showWriteListModal: function showWriteListModal(list) {\n      this.$store.Item = list;\n      this.$modal.show('writeListModal');\n    },\n    showListModal: function showListModal(list) {\n      this.$store.Item = list;\n      this.$modal.show('listModal');\n    },\n    showListSettingsModal: function showListSettingsModal() {\n      this.$modal.show('listSettingsModal');\n    },\n    listenToEvents: function listenToEvents() {\n      var _this7 = this;\n\n      bus.$on('refreshLists', function () {\n        _this7.fetchLists(); // update list\n\n      });\n    }\n  }\n};",{"version":3,"sources":["ListBox.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div\r\n    class=\"shadow-lg bg-white rounded-lg\"\r\n    style=\"white-space: nowrap;\r\n  margin-bottom: 16px;\r\n  -webkit-column-break-inside: avoid;\r\n        page-break-inside: avoid;\r\n             break-inside: avoid;\"\r\n  >\r\n    <!-- listbox -->\r\n    <h2 class=\"p-2 bg-gray-200 border-b-2 border-indigo-600\">\r\n      <button-toggle-box\r\n        v-model=\"expanded\"\r\n        expanded-class=\"text-indigo-600\"\r\n        minimized-class=\"hover:text-indigo-600\"\r\n      >\r\n        <list-icon />\r\n      </button-toggle-box>\r\n      <span class=\"text-gray-600 uppercase tracking-wide font-medium text-sm\">\r\n        Lists\r\n      </span>\r\n      <button\r\n        class=\"text-gray-600 hover:text-indigo-600 align-middle float-right\"\r\n      >\r\n        <settings-icon />\r\n      </button>\r\n    </h2>\r\n\r\n    <div\r\n      v-show=\"expanded\"\r\n      class=\"flex p-1\"\r\n    >\r\n      <form\r\n        class=\"flex flex-grow\"\r\n        @submit.prevent=\"addList\"\r\n      >\r\n        <input\r\n          v-model=\"newList\"\r\n          class=\"flex-grow px-1 outline-none\"\r\n          type=\"text\"\r\n          placeholder=\"New List\"\r\n        >\r\n        <button\r\n          type=\"submit\"\r\n          class=\"border-2 p-1 border-gray-500 text-gray-500 hover:text-yellow-500 hover:border-yellow-500 rounded-sm\"\r\n        >\r\n          <plus-icon />\r\n        </button>\r\n      </form>\r\n      <button\r\n        type=\"submit\"\r\n        class=\"p-1 ml-1 border-2 border-indigo-500 bg-indigo-500 text-white hover:bg-indigo-400 rounded-sm flex-shrink-0\"\r\n      >\r\n        <package-icon />\r\n      </button>\r\n    </div>\r\n\r\n    <div\r\n      class=\"\"\r\n      style=\"-webkit-column-break-inside: avoid;\r\n          page-break-inside: avoid;\r\n               break-inside: avoid;\r\n               overflow-y: scroll;\r\n               max-height: 70vh;\"\r\n    >\r\n      <ol v-show=\"(lists.length>0) && (expanded)\">\r\n        <li\r\n          v-for=\"(list, i) in lists.slice().reverse()\"\r\n          :key=\"list._id\"\r\n          class=\"border-gray-500 border-t-2 flex items-top bg-gray-100 text-left p-1\"\r\n          :class=\"{ 'bg-gray-200': !(i % 2) }\"\r\n          @mouseleave=\"changeHighlight(list)\"\r\n          @mouseenter=\"changeHighlight(list)\"\r\n        >\r\n          <button\r\n            class=\"border-gray-500 border-2 px-1 text-gray-500 hover:text-yellow-600 hover:border-yellow-600 rounded-sm\"\r\n            @click=\"showWriteListModal(list)\"\r\n          >\r\n            <list-icon />\r\n          </button>\r\n\r\n          <div />\r\n\r\n          <div class=\"border-1 border-solid border-blue-500 w-auto flex-grow\">\r\n            <input\r\n              v-model=\"list.item\"\r\n              type=\"text\"\r\n              class=\"truncate flex-grow pl-1 bg-transparent border-gray-500 h-full w-full\"\r\n              :class=\"{\r\n                'line-through text-gray-600': list.completion,\r\n                'text-gray-900': !list.completion\r\n              }\"\r\n              @keyup.enter=\"saveChanges(list)\"\r\n            >\r\n          </div>\r\n\r\n          <div class=\"flex\">\r\n            <button\r\n              class=\"border-gray-500 ml-1 border-2 flex-shrink-0 text-gray-500 hover:text-blue-500 hover:border-blue-500 p-1 rounded-sm\"\r\n              @click=\"showListModal(list)\"\r\n            >\r\n              <menu-icon />\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ol>\r\n\r\n      <div\r\n        v-show=\"lists.length==0\"\r\n        class=\"row alert alert-info text-center bg-gray-200\"\r\n      >\r\n        <p class=\"alert alert-info truncate text-gray-500\">\r\n          The List Box is empty. Create a new List above!\r\n        </p>\r\n      </div>\r\n\r\n      <write-list-modal style=\"overflow-y: scroll;\" />\r\n      <list-modal style=\"overflow-y: scroll;\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { ListIcon, SettingsIcon, PlusIcon, PackageIcon, MenuIcon } from 'vue-feather-icons'\r\n\r\nimport bus from './../bus.js'\r\n\r\nimport ListModal from '../modals/ListModal.vue'\r\nimport WriteListModal from '../modals/WriteListModal.vue'\r\n\r\nimport ButtonToggleBox from './widgets/ButtonToggleBox.vue'\r\n\r\nexport default {\r\n  components: {\r\n    ListIcon,\r\n    SettingsIcon,\r\n    PlusIcon,\r\n    PackageIcon,\r\n    MenuIcon,\r\n    WriteListModal,\r\n    ButtonToggleBox,\r\n    ListModal,\r\n  },\r\n  data() {\r\n    return {\r\n      listListKey: 0,\r\n      colors: [],\r\n      lists: [],\r\n      newList: '',\r\n      expanded: true,\r\n      box: 'List',\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchLists()\r\n    this.listenToEvents()\r\n  },\r\n  methods: {\r\n    changeHighlight(list) {\r\n      if (this.$store.highlightRoutineID === list.routineID) { this.$store.highlightRoutineID = null } else { this.$store.highlightRoutineID = list.routineID }\r\n      if (this.$store.highlightGoalID === list.goalID) {\r\n        this.$store.highlightGoalID = null\r\n      } else { this.$store.highlightGoalID = list.goalID }\r\n    },\r\n    addList() {\r\n      let param = {\r\n        item: this.newList,\r\n      }\r\n      axios\r\n        .post('/lists', param)\r\n        .then(() => {\r\n          this.clearList()\r\n          this.fetchLists()\r\n        })\r\n    },\r\n    clearList() {\r\n      this.newList = ''\r\n    },\r\n    fetchLists() {\r\n      axios.get('/lists').then(response => {\r\n        this.lists = response.data\r\n      })\r\n    },\r\n    toggleListCompletion(list) {\r\n      let id = list._id\r\n      if (list.completion) {\r\n        axios\r\n          .patch(`/lists/${id}`, { completion: false })\r\n          .then(() => {\r\n            list.completion = false\r\n          })\r\n      } else {\r\n        axios\r\n          .patch(`/lists/${id}`, { completion: true, focus: false })\r\n          .then(() => {\r\n            list.completion = true\r\n            list.focus = false\r\n            this.fetchLists()\r\n          })\r\n      }\r\n    },\r\n    toggleListFocus(list) {\r\n      let id = list._id\r\n      if (list.focus) {\r\n        axios\r\n          .patch(`/lists/${id}`, { focus: false })\r\n          .then(() => {\r\n            list.focus = false\r\n            this.fetchLists()\r\n          })\r\n      } else {\r\n        axios\r\n          .patch(`/lists/${id}`, { focus: true })\r\n          .then(() => {\r\n            list.focus = true\r\n            this.fetchLists()\r\n          })\r\n      }\r\n    },\r\n    saveChanges(list) {\r\n      list.lastEdited = new Date()\r\n      axios\r\n        .patch(`/lists/${list._id}`, list)\r\n        .then(() => {\r\n          this.fetchLists()\r\n        })\r\n    },\r\n    deleteList(list) {\r\n      axios\r\n        .delete(`/lists/${list._id}`)\r\n        .then(() => {\r\n          bus.$emit('refreshLists')\r\n        })\r\n    },\r\n    anyChangeTimer(item) {\r\n      if (item.timer) {\r\n        axios\r\n          .put(`anyChangeTimer/${item._id}/${item.type}/false`)\r\n          .then(() => {\r\n            this.fetchLists()\r\n          })\r\n      } else {\r\n        axios\r\n          .put(`anyChangeTimer/${item._id}/${item.type}/true`)\r\n          .then(() => {\r\n            this.fetchLists()\r\n          })\r\n      }\r\n    },\r\n    showWriteListModal(list) {\r\n      this.$store.Item = list\r\n\r\n      this.$modal.show('writeListModal',)\r\n    },\r\n    showListModal(list) {\r\n      this.$store.Item = list\r\n\r\n      this.$modal.show('listModal',)\r\n    },\r\n    showListSettingsModal() {\r\n      this.$modal.show('listSettingsModal',)\r\n    },\r\n    listenToEvents() {\r\n      bus.$on('refreshLists', () => {\r\n        this.fetchLists() // update list\r\n      })\r\n    },\r\n  },\r\n}\r\n\r\n</script>\r\n"],"sourceRoot":"src/components"}]}