{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js!/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/components/RoutineBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/components/RoutineBox.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addDays } from 'date-fns';\nimport axios from 'axios';\nimport { CopyIcon, PackageIcon, PlusIcon, MenuIcon, TrendingUpIcon, CheckIcon, XIcon } from 'vue-feather-icons';\nimport bus from \"./../bus.js\";\nimport Timer from \"./widgets/Timer.vue\";\nimport ButtonToggleBox from \"./widgets/ButtonToggleBox.vue\";\nimport RoutineModal from \"../modals/RoutineModal.vue\";\nimport RoutineSettingsModal from \"../modals/RoutineSettingsModal.vue\";\nimport DurationBadge from \"./widgets/DurationBadge.vue\";\nimport MoneyValueBadge from \"./widgets/MoneyValueBadge.vue\";\nexport default {\n  components: {\n    CopyIcon: CopyIcon,\n    PackageIcon: PackageIcon,\n    PlusIcon: PlusIcon,\n    MenuIcon: MenuIcon,\n    TrendingUpIcon: TrendingUpIcon,\n    CheckIcon: CheckIcon,\n    XIcon: XIcon,\n    Timer: Timer,\n    ButtonToggleBox: ButtonToggleBox,\n    RoutineModal: RoutineModal,\n    RoutineSettingsModal: RoutineSettingsModal,\n    DurationBadge: DurationBadge,\n    MoneyValueBadge: MoneyValueBadge\n  },\n  data: function data() {\n    return {\n      routines: [],\n      newRoutine: '',\n      expanded: true,\n      box: 'Routine'\n    };\n  },\n  created: function created() {\n    this.fetchRoutines();\n    this.listenToEvents();\n  },\n  methods: {\n    showRoutineSettingsModal: function showRoutineSettingsModal() {\n      this.$modal.show('routineSettingsModal');\n    },\n    addRoutine: function addRoutine() {\n      var _this = this;\n\n      var param = {\n        item: this.newRoutine\n      };\n      axios.post('/routines', param).then(function () {\n        _this.clearRoutine();\n\n        _this.fetchRoutines();\n      });\n    },\n    clearRoutine: function clearRoutine() {\n      this.newRoutine = '';\n    },\n    refreshRoutines: function refreshRoutines() {\n      bus.$emit('refreshRoutines');\n    },\n    fetchRoutines: function fetchRoutines() {\n      var _this2 = this;\n\n      axios.get('/routines').then(function (response) {\n        _this2.routines = response.data;\n        var now = new Date();\n\n        for (var i = 0; i < _this2.routines.length; i++) {\n          if (now >= new Date(_this2.routines[i].refreshDate)) {\n            _this2.routineGenerateTask(_this2.routines[i]);\n\n            _this2.uncompleteRoutine(_this2.routines[i]); // this.routines[i].refreshDate.setTime(this.routines[i].refreshDate.getTime() + this.routines[i].refreshRateHours * 1000 * 60 * 60)\n            // this.routines[i].refreshDate.setTime(now + 3000)\n            // this.routines[i].refreshDate.setHours(0)\n\n\n            var newRefreshDate = new Date();\n            newRefreshDate.setHours(0);\n            newRefreshDate.setMinutes(0);\n            newRefreshDate.setSeconds(0);\n            newRefreshDate = addDays(newRefreshDate, 1); // newRefreshDate.setTime(now.getTime() + 6000)\n\n            var id = _this2.routines[i]._id;\n            axios.patch(\"/routines/\".concat(id), {\n              refreshDate: newRefreshDate\n            });\n          }\n        }\n      });\n    },\n    completeRoutine: function completeRoutine(routine) {\n      var id = routine._id;\n      var newCompletions = routine.completions + 1;\n      routine.editing = false;\n      axios.patch(\"/routines/\".concat(id), {\n        completion: true,\n        completions: newCompletions\n      }).then(function () {\n        routine.completion = true;\n        routine.completions += 1;\n      });\n    },\n    uncompleteRoutine: function uncompleteRoutine(routine) {\n      var id = routine._id;\n      var newCompletions = routine.completions - 1;\n      routine.editing = false;\n      axios.patch(\"/routines/\".concat(id), {\n        completion: false,\n        completions: newCompletions\n      }).then(function () {\n        routine.completion = false;\n        routine.completions -= 1;\n      });\n    },\n    changeRoutineItem: function changeRoutineItem(routine) {\n      var _this3 = this;\n\n      var id = routine._id;\n      var it = routine.item;\n      axios.put(\"/changeRoutineItem/\".concat(id, \"/\").concat(it)).then(function () {\n        _this3.fetchRoutines();\n      });\n    },\n    deleteRoutine: function deleteRoutine(id) {\n      var _this4 = this;\n\n      axios.get(\"/deleteRoutine/\".concat(id)).then(function () {\n        _this4.fetchRoutines();\n      });\n    },\n    showRoutineModal: function showRoutineModal(routine) {\n      this.$store.Item = routine;\n      this.$modal.show('routineModal');\n    },\n    listenToEvents: function listenToEvents() {\n      var _this5 = this;\n\n      bus.$on('refreshRoutines', function () {\n        _this5.fetchRoutines(); // update routine\n\n      });\n    },\n    routineGenerateTask: function routineGenerateTask(routine) {\n      var _this6 = this;\n\n      if (event) event.preventDefault();\n      var param = {\n        item: routine.item,\n        priority: routine.priority,\n        difficulty: routine.difficulty,\n        goalID: routine.goalID,\n        duration: routine.duration,\n        valueMoney: routine.valueMoney\n      };\n      axios.post(\"/routineGenerateTask/\".concat(routine._id), param).then(function () {\n        _this6.clearRoutine();\n\n        _this6.refreshTasks();\n      });\n    },\n    refreshTasks: function refreshTasks() {\n      bus.$emit('refreshTasks');\n    }\n  }\n};",{"version":3,"sources":["RoutineBox.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div\r\n    class=\"shadow-lg bg-white rounded-lg\"\r\n    style=\"white-space: nowrap;\r\n  margin-bottom: 32px;\r\n  -webkit-column-break-inside: avoid;\r\n        page-break-inside: avoid;\r\n             break-inside: avoid;\"\r\n  >\r\n    <!-- routinebox -->\r\n    <h2 class=\"p-2 bg-gray-200 border-b-2 border-blue-500\">\r\n      <button-toggle-box\r\n        v-model=\"expanded\"\r\n        expanded-class=\"text-blue-500\"\r\n        minimized-class=\"hover:text-blue-500\"\r\n      >\r\n        <copy-icon />\r\n      </button-toggle-box>\r\n\r\n      <span class=\"text-gray-600 uppercase tracking-wide font-medium text-sm\">\r\n        Routines\r\n      </span>\r\n    </h2>\r\n\r\n    <div\r\n      v-show=\"expanded\"\r\n      class=\"flex p-1\"\r\n    >\r\n      <form\r\n        class=\"flex flex-grow\"\r\n        @submit.prevent=\"addRoutine\"\r\n      >\r\n        <input\r\n          v-model=\"newRoutine\"\r\n          class=\"flex-grow px-1 outline-none\"\r\n          type=\"text\"\r\n          placeholder=\"New Routine\"\r\n        >\r\n        <button\r\n          type=\"submit\"\r\n          class=\"border-2 p-1 border-gray-500 text-gray-500 hover:text-yellow-500 hover:border-yellow-500 rounded-sm\"\r\n        >\r\n          <plus-icon />\r\n        </button>\r\n      </form>\r\n      <button\r\n        type=\"submit\"\r\n        class=\"p-1 ml-1 border-2 border-blue-500 bg-blue-500 text-white hover:bg-blue-400 rounded-sm flex-shrink-0\"\r\n      >\r\n        <package-icon />\r\n      </button>\r\n    </div>\r\n\r\n    <div\r\n      class=\"\"\r\n      style=\"-webkit-column-break-inside: avoid;\r\n          page-break-inside: avoid;\r\n               break-inside: avoid;\"\r\n    >\r\n      <ol v-show=\"(routines.length>0) && (expanded)\">\r\n        <li\r\n          v-for=\"(routine, i) in $store.routines.slice().reverse()\"\r\n          :key=\"routine._id\"\r\n          class=\"border-gray-500 border-t-2 flex items-top bg-gray-100 text-left p-1\"\r\n          :class=\"{ 'bg-gray-200': !(i % 2), 'bg-blue-200': ($store.highlightRoutineID === routine._id), 'bg-gray-400': routine.completion }\"\r\n        >\r\n          <button\r\n            v-show=\"routine.completion==false\"\r\n            class=\"border-gray-500 border-2 px-1 text-gray-500 hover:text-yellow-600 hover:border-yellow-600 rounded-sm\"\r\n            @click=\"completeRoutine(routine)\"\r\n          >\r\n            <check-icon />\r\n          </button>\r\n\r\n          <button\r\n            v-show=\"routine.completion==true\"\r\n            class=\"border-2 px-1 border-gray-500 text-gray-500 hover:text-red-500 hover:border-red-500 rounded-sm\"\r\n            @click=\"uncompleteRoutine(routine)\"\r\n          >\r\n            <x-icon />\r\n          </button>\r\n\r\n          <button\r\n            class=\"border-2 mx-1 px-1 border-gray-500 text-gray-500 hover:text-yellow-500 hover:border-yellow-500 rounded-sm\"\r\n            @click=\"routineGenerateTask(routine)\"\r\n          >\r\n            <plus-icon />\r\n          </button>\r\n\r\n          <div />\r\n\r\n          <div class=\"border-1 border-solid border-blue-500 w-auto flex-grow\">\r\n            <input\r\n              v-model=\"routine.item\"\r\n              type=\"text\"\r\n              class=\"truncate flex-grow pl-1 bg-transparent border-gray-500 h-full w-full\"\r\n              :class=\"{\r\n                'line-through text-gray-600': routine.completion,\r\n                'text-gray-900': !routine.completion\r\n              }\"\r\n              @keyup.enter=\"changeRoutineItem(routine)\"\r\n            >\r\n          </div>\r\n\r\n          <div\r\n            v-show=\"routine.goalID\"\r\n            class=\"text-gray-500 hover:text-teal-400 p-1 mr-1 flex\"\r\n            :class=\"{\r\n              'line-through text-gray-500': routine.completion,\r\n              'text-teal-500': !routine.completion\r\n            }\"\r\n            :title=\"`${routine.goalName}`\"\r\n          >\r\n            <trending-up-icon />\r\n          </div>\r\n\r\n          <div\r\n            v-show=\"routine.completions\"\r\n            class=\"flex p-1 border-2 border-gray-500 rounded-sm hover:text-blue-400 hover:border-blue-400 text-gray-500\"\r\n            :title=\"`${routine.completions} completions`\"\r\n          >\r\n            <copy-icon />\r\n            <span>{{ routine.completions }}</span>\r\n          </div>\r\n\r\n          <duration-badge :value=\"Number(routine.duration)\" />\r\n\r\n          <money-value-badge :value=\"Number(routine.valueMoney)\" />\r\n\r\n          <div class=\"flex\">\r\n            <button\r\n              class=\"border-gray-500 ml-1 border-2 flex-shrink-0 text-gray-500 hover:text-blue-500 hover:border-blue-500 p-1 rounded-sm\"\r\n              @click=\"showRoutineModal(routine)\"\r\n            >\r\n              <menu-icon />\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ol>\r\n\r\n      <div\r\n        v-show=\"routines.length==0 && expanded\"\r\n        class=\"row alert alert-info text-center bg-gray-200\"\r\n      >\r\n        <p class=\"alert alert-info truncate text-gray-500\">\r\n          The Routine Box is empty. Create a new Routine above!\r\n        </p>\r\n      </div>\r\n\r\n      <modal\r\n        name=\"routineModal\"\r\n        height=\"600px\"\r\n        width=\"400px\"\r\n      >\r\n        <routine-modal />\r\n      </modal>\r\n\r\n      <modal\r\n        name=\"routineSettingsModal\"\r\n        height=\"600px\"\r\n        width=\"400px\"\r\n      >\r\n        <routine-settings-modal />\r\n      </modal>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { addDays } from 'date-fns'\r\nimport axios from 'axios'\r\nimport { CopyIcon, PackageIcon, PlusIcon, MenuIcon, TrendingUpIcon, CheckIcon, XIcon } from 'vue-feather-icons'\r\n\r\nimport bus from './../bus.js'\r\n\r\nimport Timer from './widgets/Timer.vue'\r\nimport ButtonToggleBox from './widgets/ButtonToggleBox.vue'\r\nimport RoutineModal from '../modals/RoutineModal.vue'\r\nimport RoutineSettingsModal from '../modals/RoutineSettingsModal.vue'\r\nimport DurationBadge from './widgets/DurationBadge.vue'\r\nimport MoneyValueBadge from './widgets/MoneyValueBadge.vue'\r\n\r\nexport default {\r\n  components: {\r\n    CopyIcon,\r\n    PackageIcon,\r\n    PlusIcon,\r\n    MenuIcon,\r\n    TrendingUpIcon,\r\n    CheckIcon,\r\n    XIcon,\r\n    Timer,\r\n    ButtonToggleBox,\r\n    RoutineModal,\r\n    RoutineSettingsModal,\r\n    DurationBadge,\r\n    MoneyValueBadge,\r\n  },\r\n  data() {\r\n    return {\r\n      routines: [],\r\n      newRoutine: '',\r\n      expanded: true,\r\n      box: 'Routine',\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchRoutines()\r\n    this.listenToEvents()\r\n  },\r\n  methods: {\r\n    showRoutineSettingsModal() {\r\n      this.$modal.show('routineSettingsModal',)\r\n    },\r\n    addRoutine() {\r\n      let param = {\r\n        item: this.newRoutine,\r\n      }\r\n      axios\r\n        .post('/routines', param)\r\n        .then(() => {\r\n          this.clearRoutine()\r\n          this.fetchRoutines()\r\n        })\r\n    },\r\n    clearRoutine() {\r\n      this.newRoutine = ''\r\n    },\r\n    refreshRoutines() {\r\n      bus.$emit('refreshRoutines')\r\n    },\r\n    fetchRoutines() {\r\n      axios.get('/routines').then(response => {\r\n        this.routines = response.data\r\n        var now = new Date()\r\n        for (var i = 0; i < this.routines.length; i++) {\r\n          if (now >= new Date(this.routines[i].refreshDate)) {\r\n            this.routineGenerateTask(this.routines[i])\r\n            this.uncompleteRoutine(this.routines[i])\r\n            // this.routines[i].refreshDate.setTime(this.routines[i].refreshDate.getTime() + this.routines[i].refreshRateHours * 1000 * 60 * 60)\r\n            // this.routines[i].refreshDate.setTime(now + 3000)\r\n            // this.routines[i].refreshDate.setHours(0)\r\n\r\n            var newRefreshDate = new Date()\r\n            newRefreshDate.setHours(0)\r\n            newRefreshDate.setMinutes(0)\r\n            newRefreshDate.setSeconds(0)\r\n            newRefreshDate = addDays(newRefreshDate, 1)\r\n            // newRefreshDate.setTime(now.getTime() + 6000)\r\n            var id = this.routines[i]._id\r\n            axios\r\n              .patch(`/routines/${id}`, { refreshDate: newRefreshDate })\r\n          }\r\n        }\r\n      })\r\n    },\r\n    completeRoutine(routine) {\r\n      let id = routine._id\r\n      let newCompletions = routine.completions + 1\r\n      routine.editing = false\r\n      axios\r\n        .patch(`/routines/${id}`, { completion: true, completions: newCompletions })\r\n        .then(() => {\r\n          routine.completion = true\r\n          routine.completions += 1\r\n        })\r\n    },\r\n    uncompleteRoutine(routine) {\r\n      let id = routine._id\r\n      let newCompletions = routine.completions - 1\r\n      routine.editing = false\r\n      axios\r\n        .patch(`/routines/${id}`, { completion: false, completions: newCompletions })\r\n        .then(() => {\r\n          routine.completion = false\r\n          routine.completions -= 1\r\n        })\r\n    },\r\n    changeRoutineItem(routine) {\r\n      let id = routine._id\r\n      let it = routine.item\r\n      axios\r\n        .put(`/changeRoutineItem/${id}/${it}`)\r\n        .then(() => {\r\n          this.fetchRoutines()\r\n        })\r\n    },\r\n    deleteRoutine(id) {\r\n      axios\r\n        .get(`/deleteRoutine/${id}`)\r\n        .then(() => {\r\n          this.fetchRoutines()\r\n        })\r\n    },\r\n    showRoutineModal(routine) {\r\n      this.$store.Item = routine\r\n\r\n      this.$modal.show('routineModal',)\r\n    },\r\n    listenToEvents() {\r\n      bus.$on('refreshRoutines', () => {\r\n        this.fetchRoutines() // update routine\r\n      })\r\n    },\r\n    routineGenerateTask(routine) {\r\n      if (event) event.preventDefault()\r\n      let param = {\r\n        item: routine.item,\r\n        priority: routine.priority,\r\n        difficulty: routine.difficulty,\r\n        goalID: routine.goalID,\r\n        duration: routine.duration,\r\n        valueMoney: routine.valueMoney,\r\n      }\r\n      axios\r\n        .post(`/routineGenerateTask/${routine._id}`, param)\r\n        .then(() => {\r\n          this.clearRoutine()\r\n          this.refreshTasks()\r\n        })\r\n    },\r\n    refreshTasks() {\r\n      bus.$emit('refreshTasks')\r\n    },\r\n  },\r\n}\r\n\r\n</script>\r\n"],"sourceRoot":"src/components"}]}