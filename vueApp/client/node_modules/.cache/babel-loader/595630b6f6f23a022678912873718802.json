{"remainingRequest":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js!/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bluesteel/Desktop/hack19/vueApp/client/src/components/SubscriptionBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/src/components/SubscriptionBox.vue","mtime":1571626268000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/bluesteel/Desktop/hack19/vueApp/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addDays } from 'date-fns';\nimport axios from 'axios';\nimport { CreditCardIcon, PackageIcon, PlusIcon, MenuIcon, ExternalLinkIcon } from 'vue-feather-icons';\nimport bus from \"./../bus.js\";\nimport ButtonToggleBox from \"./widgets/ButtonToggleBox.vue\";\nimport SubscriptionModal from \"../modals/SubscriptionModal.vue\";\nimport MoneyValueBadge from \"./widgets/MoneyValueBadge.vue\";\nexport default {\n  components: {\n    CreditCardIcon: CreditCardIcon,\n    PackageIcon: PackageIcon,\n    PlusIcon: PlusIcon,\n    MenuIcon: MenuIcon,\n    ExternalLinkIcon: ExternalLinkIcon,\n    ButtonToggleBox: ButtonToggleBox,\n    SubscriptionModal: SubscriptionModal,\n    MoneyValueBadge: MoneyValueBadge\n  },\n  data: function data() {\n    return {\n      subscriptions: [],\n      newSubscription: '',\n      expanded: true,\n      box: 'Subscription'\n    };\n  },\n  created: function created() {\n    this.fetchSubscriptions();\n    this.listenToEvents();\n  },\n  methods: {\n    showSubscriptionSettingsModal: function showSubscriptionSettingsModal() {// this.$modal.show('subscriptionSettingsModal',)\n    },\n    addSubscription: function addSubscription() {\n      var _this = this;\n\n      var param = {\n        item: this.newSubscription\n      };\n      axios.post('/subscriptions', param).then(function () {\n        _this.clearSubscription();\n\n        _this.fetchSubscriptions();\n      });\n    },\n    clearSubscription: function clearSubscription() {\n      this.newSubscription = '';\n    },\n    refreshSubscriptions: function refreshSubscriptions() {\n      bus.$emit('refreshSubscriptions');\n    },\n    fetchSubscriptions: function fetchSubscriptions() {\n      var _this2 = this;\n\n      axios.get('/subscriptions').then(function (response) {\n        _this2.subscriptions = response.data;\n      });\n    },\n    saveChanges: function () {\n      var _saveChanges = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(subscription) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.patch(\"/subscriptions/\".concat(subscription._id), subscription);\n\n              case 2:\n                subscription.lastEdited = new Date();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function saveChanges(_x) {\n        return _saveChanges.apply(this, arguments);\n      }\n\n      return saveChanges;\n    }(),\n    deleteSubscription: function deleteSubscription(id) {\n      var _this3 = this;\n\n      axios.get(\"/deleteSubscription/\".concat(id)).then(function () {\n        _this3.fetchSubscriptions();\n      });\n    },\n    anyChangeTimer: function anyChangeTimer(item) {\n      var _this4 = this;\n\n      if (item.timer) {\n        axios.put(\"anyChangeTimer/\".concat(item._id, \"/\").concat(item.type, \"/false\")).then(function () {\n          _this4.fetchSubscriptions();\n        });\n      } else {\n        axios.put(\"anyChangeTimer/\".concat(item._id, \"/\").concat(item.type, \"/true\")).then(function () {\n          _this4.fetchSubscriptions();\n        });\n      }\n    },\n    showSubscriptionModal: function showSubscriptionModal(subscription) {\n      this.$store.Item = subscription;\n      this.$modal.show('subscriptionModal');\n    },\n    listenToEvents: function listenToEvents() {\n      var _this5 = this;\n\n      bus.$on('refreshSubscriptions', function () {\n        _this5.fetchSubscriptions(); // update subscription\n\n      });\n    },\n    subscriptionGenerateTask: function subscriptionGenerateTask(subscription) {\n      var _this6 = this;\n\n      if (event) event.preventDefault();\n      var param = {\n        item: subscription.item,\n        priority: subscription.priority,\n        difficulty: subscription.difficulty,\n        goalID: subscription.goalID,\n        duration: subscription.duration,\n        valueMoney: subscription.valueMoney\n      };\n      axios.post(\"/subscriptionGenerateTask/\".concat(subscription._id), param).then(function () {\n        _this6.clearSubscription();\n\n        _this6.refreshTasks();\n      });\n    },\n    refreshTasks: function refreshTasks() {\n      bus.$emit('refreshTasks');\n    }\n  }\n};",{"version":3,"sources":["SubscriptionBox.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div\r\n    class=\"shadow-lg bg-white rounded-lg\"\r\n    style=\"white-space: nowrap;\r\n  margin-bottom: 32px;\r\n  -webkit-column-break-inside: avoid;\r\n        page-break-inside: avoid;\r\n             break-inside: avoid;\"\r\n  >\r\n    <!-- subscriptionbox -->\r\n    <h2 class=\"p-2 bg-gray-200 border-b-2 border-orange-500\">\r\n      <button-toggle-box\r\n        v-model=\"expanded\"\r\n        expanded-class=\"text-orange-500\"\r\n        minimized-class=\"hover:text-orange-500\"\r\n      >\r\n        <credit-card-icon />\r\n      </button-toggle-box>\r\n\r\n      <span class=\"text-gray-600 uppercase tracking-wide font-medium text-sm\">\r\n        Subscriptions\r\n      </span>\r\n    </h2>\r\n\r\n    <div\r\n      v-show=\"expanded\"\r\n      class=\"flex p-1\"\r\n    >\r\n      <form\r\n        class=\"flex flex-grow\"\r\n        @submit.prevent=\"addSubscription\"\r\n      >\r\n        <input\r\n          v-model=\"newSubscription\"\r\n          class=\"flex-grow px-1 outline-none\"\r\n          type=\"text\"\r\n          placeholder=\"New Subscription\"\r\n        >\r\n        <button\r\n          type=\"submit\"\r\n          class=\"border-2 p-1 border-gray-500 text-gray-500 hover:text-yellow-500 hover:border-yellow-500 rounded-sm\"\r\n        >\r\n          <plus-icon />\r\n        </button>\r\n      </form>\r\n      <button\r\n        type=\"submit\"\r\n        class=\"p-1 ml-1 border-2 border-orange-500 bg-orange-500 text-white hover:bg-orange-400 rounded-sm flex-shrink-0\"\r\n      >\r\n        <package-icon />\r\n      </button>\r\n    </div>\r\n\r\n    <div\r\n      class=\"\"\r\n      style=\"-webkit-column-break-inside: avoid;\r\n          page-break-inside: avoid;\r\n               break-inside: avoid;\"\r\n    >\r\n      <ol v-show=\"(subscriptions.length>0) && (expanded)\">\r\n        <li\r\n          v-for=\"(subscription, i) in subscriptions.slice().reverse()\"\r\n          :key=\"subscription._id\"\r\n          class=\"border-gray-500 border-t-2 flex items-top bg-gray-100 text-left p-1\"\r\n          :class=\"{ 'bg-gray-200': !(i % 2), 'bg-blue-200': ($store.highlightSubscriptionID === subscription._id) }\"\r\n        >\r\n          <button\r\n            class=\"border-2 px-1 border-gray-500 text-gray-500 hover:text-yellow-500 hover:border-yellow-500 rounded-sm\"\r\n          >\r\n            <external-link-icon />\r\n          </button>\r\n\r\n          <div />\r\n\r\n          <div class=\"ml-1 border-1 border-solid border-blue-500 w-auto flex-grow\">\r\n            <input\r\n              v-model=\"subscription.item\"\r\n              type=\"text\"\r\n              class=\"truncate flex-grow pl-1 bg-transparent border-gray-500 h-full w-full\"\r\n              :class=\"{\r\n                'line-through text-gray-600': subscription.completion,\r\n                'text-gray-900': !subscription.completion\r\n              }\"\r\n              @keyup.enter=\"saveChanges(subscription)\"\r\n            >\r\n          </div>\r\n\r\n          <money-value-badge :value=\"Number(subscription.valueMoney)\" />\r\n\r\n          <div class=\"flex\">\r\n            <button\r\n              class=\"ml-1 border-gray-500 border-2 flex-shrink-0 text-gray-500 hover:text-blue-500 hover:border-blue-500 p-1 rounded-sm\"\r\n              @click=\"showSubscriptionModal(subscription)\"\r\n            >\r\n              <menu-icon />\r\n            </button>\r\n          </div>\r\n        </li>\r\n      </ol>\r\n\r\n      <div\r\n        v-show=\"subscriptions.length==0 && expanded\"\r\n        class=\"text-center bg-gray-200\"\r\n      >\r\n        <p class=\"truncate text-gray-500\">\r\n          The Subscription Box is empty. Create a new Subscription above!\r\n        </p>\r\n      </div>\r\n\r\n      <subscription-modal style=\"overflow-y: scroll;\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { addDays } from 'date-fns'\r\nimport axios from 'axios'\r\nimport { CreditCardIcon, PackageIcon, PlusIcon, MenuIcon, ExternalLinkIcon } from 'vue-feather-icons'\r\n\r\nimport bus from './../bus.js'\r\n\r\nimport ButtonToggleBox from './widgets/ButtonToggleBox.vue'\r\nimport SubscriptionModal from '../modals/SubscriptionModal.vue'\r\nimport MoneyValueBadge from './widgets/MoneyValueBadge.vue'\r\n\r\nexport default {\r\n  components: {\r\n    CreditCardIcon,\r\n    PackageIcon,\r\n    PlusIcon,\r\n    MenuIcon,\r\n    ExternalLinkIcon,\r\n    ButtonToggleBox,\r\n    SubscriptionModal,\r\n    MoneyValueBadge,\r\n  },\r\n  data() {\r\n    return {\r\n      subscriptions: [],\r\n      newSubscription: '',\r\n      expanded: true,\r\n      box: 'Subscription',\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchSubscriptions()\r\n    this.listenToEvents()\r\n  },\r\n  methods: {\r\n    showSubscriptionSettingsModal() {\r\n      // this.$modal.show('subscriptionSettingsModal',)\r\n    },\r\n    addSubscription() {\r\n      let param = {\r\n        item: this.newSubscription,\r\n      }\r\n      axios\r\n        .post('/subscriptions', param)\r\n        .then(() => {\r\n          this.clearSubscription()\r\n          this.fetchSubscriptions()\r\n        })\r\n    },\r\n    clearSubscription() {\r\n      this.newSubscription = ''\r\n    },\r\n    refreshSubscriptions() {\r\n      bus.$emit('refreshSubscriptions')\r\n    },\r\n    fetchSubscriptions() {\r\n      axios.get('/subscriptions').then(response => {\r\n        this.subscriptions = response.data\r\n      })\r\n    },\r\n    async saveChanges(subscription) {\r\n      await axios.patch(`/subscriptions/${subscription._id}`, subscription)\r\n      subscription.lastEdited = new Date()\r\n    },\r\n    deleteSubscription(id) {\r\n      axios\r\n        .get(`/deleteSubscription/${id}`)\r\n        .then(() => {\r\n          this.fetchSubscriptions()\r\n        })\r\n    },\r\n    anyChangeTimer(item) {\r\n      if (item.timer) {\r\n        axios\r\n          .put(`anyChangeTimer/${item._id}/${item.type}/false`)\r\n          .then(() => {\r\n            this.fetchSubscriptions()\r\n          })\r\n      } else {\r\n        axios\r\n          .put(`anyChangeTimer/${item._id}/${item.type}/true`)\r\n          .then(() => {\r\n            this.fetchSubscriptions()\r\n          })\r\n      }\r\n    },\r\n    showSubscriptionModal(subscription) {\r\n      this.$store.Item = subscription\r\n\r\n      this.$modal.show('subscriptionModal',)\r\n    },\r\n    listenToEvents() {\r\n      bus.$on('refreshSubscriptions', () => {\r\n        this.fetchSubscriptions() // update subscription\r\n      })\r\n    },\r\n    subscriptionGenerateTask(subscription) {\r\n      if (event) event.preventDefault()\r\n      let param = {\r\n        item: subscription.item,\r\n        priority: subscription.priority,\r\n        difficulty: subscription.difficulty,\r\n        goalID: subscription.goalID,\r\n        duration: subscription.duration,\r\n        valueMoney: subscription.valueMoney,\r\n      }\r\n      axios\r\n        .post(`/subscriptionGenerateTask/${subscription._id}`, param)\r\n        .then(() => {\r\n          this.clearSubscription()\r\n          this.refreshTasks()\r\n        })\r\n    },\r\n    refreshTasks() {\r\n      bus.$emit('refreshTasks')\r\n    },\r\n  },\r\n}\r\n\r\n</script>\r\n"],"sourceRoot":"src/components"}]}